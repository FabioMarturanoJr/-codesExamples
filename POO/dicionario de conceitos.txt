Classe : 
  Entidade "geral" que definimos com base no problema que queremos resolver.

Objeto : 
  Entidade "específica", criada a partir das regras definidas pela entidade "geral". Pense que a classe é o molde e o objeto a escultura que o molde faz!

Instância : 
  esse é novo! Sabe quando criamos um objeto a partir de uma classe! Então! Dizemos que esse objeto é uma instância dessa classe! Ou, também, dizemos que a classe instanciou um objeto!

Atributo : 
  outro novo! Um atributo é uma informação de uma instância que você criou. O nome de um User, por exemplo.

Mensagem : 
  Forma com que objetos interagem - chamando funções uns dos outros. Um chamado como esse é um envio de mensagem a outro objeto. "User, resete sua senha!"

Abstração : 
  Pilar da Programação Orientada a Objetos. Se refere a sempre criar entidades que farão as ações que resolverão seu problema.

Encapsulamento : 
  Pilar da Programação Orientada a Objetos. Se refere a poder instanciar uma entidade e enviar mensagens a ela sem saber como ela funciona por dentro
  
Herança : 
  é uma forma de especializar o comportamento de uma classe com outra classe;

Classe Abstrata : 
  uma classe que não pode ser instanciada. Utilizada para definir as funções comuns (nem sempre abstratas) e suas assinaturas;

Métodos Abstratos : 
  um método, ou função, que precisa ser implementado por uma classe herdeira para funcionar corretamente. Criado para definir uma Interface ;

Interface : 
  conjunto de métodos que um determinado objeto "possui" - ou, o conjunto de mensagens que um objeto é capaz de entender e responder para;

Composição : 
  incorporar em um objeto outro objeto, para compartilhar código de maneira eficaz;

Métodos de classe : 
  métodos que podem ser chamados diretamente pela classe definida, e não por sua instância, para definirmos quando instanciar um objeto dessa classe for desnecessário! Utilizam, obrigatóriamente, atributos ou métodos internos da classe em seu funcionamento;

Métodos estáticos : 
  como os métodos de classe, mas não utilizam nada de sua classe em seu funcionament

